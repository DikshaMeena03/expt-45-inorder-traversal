#include<iostream>
#include<queue>
using namespace std;

class node
{
public:
    int data;
    node*left;
    node*right;

    node(int d)
    {
        this->data = d;
        this->left = NULL;
        this->right = NULL;
    }
};
node*buildtree(node*root)
{
    cout<<"enter the data:"<<endl;

    int data;
    cin>>data;
    root= new node(data);

    if(data == -1)
    {
        return NULL;
    }

    //insertion data in left.

    cout<<"enter data in left"<<data<<endl;
    root->left= buildtree(root->left);
    cout<<"enter data in right:"<<data<<endl;
    root->right= buildtree(root->right);

    return root;
}

void levelordertraversal(node* root){
    if(root == NULL)
        return;
     queue<node*>q;
     q.push(root);

     while(!q.empty()){

        node*temp = q.front();
        cout<<temp->data<<" ";
        q.pop();
        if(temp->left){
            q.push(temp->left);
        }
        if(temp->right){
            q.push(temp->right);
        }
     }
}

void inorder(node* root){
   if(root==NULL){
    return;
   }
   inorder(root->left);
   cout<<root->data<<" ";
   inorder(root->right);

}

int main()
{
    node*root= NULL;
    //creation of tree
    root= buildtree(root);

   cout<<"level order traversal:";
   levelordertraversal(root);
    cout<<"inorder traversal";
    inorder(root);
    return 0;
}
